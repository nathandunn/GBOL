package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * PhylogeneticNodeDBXref generated by hbm2java
 */
public abstract class AbstractPhylogeneticNodeDBXref extends AbstractSimpleObject implements java.io.Serializable {


     private Integer phylogeneticNodeDBXrefId;
     private DBXref dbxref;
     private PhylogeneticNode phylogeneticNode;

    public AbstractPhylogeneticNodeDBXref() {
    }

    public AbstractPhylogeneticNodeDBXref(DBXref dbxref, PhylogeneticNode phylogeneticNode) {
       this.dbxref = dbxref;
       this.phylogeneticNode = phylogeneticNode;
    }
   
    public Integer getPhylogeneticNodeDBXrefId() {
        return this.phylogeneticNodeDBXrefId;
    }
    
    public void setPhylogeneticNodeDBXrefId(Integer phylogeneticNodeDBXrefId) {
        this.phylogeneticNodeDBXrefId = phylogeneticNodeDBXrefId;
    }
    public DBXref getDbxref() {
        return this.dbxref;
    }
    
    public void setDbxref(DBXref dbxref) {
        this.dbxref = dbxref;
    }
    public PhylogeneticNode getPhylogeneticNode() {
        return this.phylogeneticNode;
    }
    
    public void setPhylogeneticNode(PhylogeneticNode phylogeneticNode) {
        this.phylogeneticNode = phylogeneticNode;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractPhylogeneticNodeDBXref) ) return false;
		 AbstractPhylogeneticNodeDBXref castOther = ( AbstractPhylogeneticNodeDBXref ) other; 
         
		 return ( (this.getDbxref()==castOther.getDbxref()) || ( this.getDbxref()!=null && castOther.getDbxref()!=null && this.getDbxref().equals(castOther.getDbxref()) ) )
 && ( (this.getPhylogeneticNode()==castOther.getPhylogeneticNode()) || ( this.getPhylogeneticNode()!=null && castOther.getPhylogeneticNode()!=null && this.getPhylogeneticNode().equals(castOther.getPhylogeneticNode()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getDbxref() == null ? 0 : this.getDbxref().hashCode() );
         result = 37 * result + ( getPhylogeneticNode() == null ? 0 : this.getPhylogeneticNode().hashCode() );
         return result;
   }   

public AbstractPhylogeneticNodeDBXref generateClone() {
	AbstractPhylogeneticNodeDBXref cloned = new AbstractPhylogeneticNodeDBXref; 
    	   cloned.dbxref = this.dbxref;
    	   cloned.phylogeneticNode = this.phylogeneticNode;
	return cloned;
}


}


