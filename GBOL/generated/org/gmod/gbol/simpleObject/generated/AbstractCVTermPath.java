package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * CVTermPath generated by hbm2java
 */
public abstract class AbstractCVTermPath extends AbstractSimpleObject implements java.io.Serializable {


     private Integer cvtermPathId;
     private CVTerm subjectCVTerm;
     private CVTerm objectCVTerm;
     private CV cv;
     private CVTerm type;
     private Integer pathDistance;

    public AbstractCVTermPath() {
    }

	
    public AbstractCVTermPath(CVTerm subjectCVTerm, CVTerm objectCVTerm, CV cv) {
        this.subjectCVTerm = subjectCVTerm;
        this.objectCVTerm = objectCVTerm;
        this.cv = cv;
    }
    public AbstractCVTermPath(CVTerm subjectCVTerm, CVTerm objectCVTerm, CV cv, CVTerm type, Integer pathDistance) {
       this.subjectCVTerm = subjectCVTerm;
       this.objectCVTerm = objectCVTerm;
       this.cv = cv;
       this.type = type;
       this.pathDistance = pathDistance;
    }
   
    public Integer getCvtermPathId() {
        return this.cvtermPathId;
    }
    
    public void setCvtermPathId(Integer cvtermPathId) {
        this.cvtermPathId = cvtermPathId;
    }
    public CVTerm getSubjectCVTerm() {
        return this.subjectCVTerm;
    }
    
    public void setSubjectCVTerm(CVTerm subjectCVTerm) {
        this.subjectCVTerm = subjectCVTerm;
    }
    public CVTerm getObjectCVTerm() {
        return this.objectCVTerm;
    }
    
    public void setObjectCVTerm(CVTerm objectCVTerm) {
        this.objectCVTerm = objectCVTerm;
    }
    public CV getCv() {
        return this.cv;
    }
    
    public void setCv(CV cv) {
        this.cv = cv;
    }
    public CVTerm getType() {
        return this.type;
    }
    
    public void setType(CVTerm type) {
        this.type = type;
    }
    public Integer getPathDistance() {
        return this.pathDistance;
    }
    
    public void setPathDistance(Integer pathDistance) {
        this.pathDistance = pathDistance;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractCVTermPath) ) return false;
		 AbstractCVTermPath castOther = ( AbstractCVTermPath ) other; 
         
		 return ( (this.getSubjectCVTerm()==castOther.getSubjectCVTerm()) || ( this.getSubjectCVTerm()!=null && castOther.getSubjectCVTerm()!=null && this.getSubjectCVTerm().equals(castOther.getSubjectCVTerm()) ) )
 && ( (this.getObjectCVTerm()==castOther.getObjectCVTerm()) || ( this.getObjectCVTerm()!=null && castOther.getObjectCVTerm()!=null && this.getObjectCVTerm().equals(castOther.getObjectCVTerm()) ) )
 && ( (this.getType()==castOther.getType()) || ( this.getType()!=null && castOther.getType()!=null && this.getType().equals(castOther.getType()) ) )
 && ( (this.getPathDistance()==castOther.getPathDistance()) || ( this.getPathDistance()!=null && castOther.getPathDistance()!=null && this.getPathDistance().equals(castOther.getPathDistance()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getSubjectCVTerm() == null ? 0 : this.getSubjectCVTerm().hashCode() );
         result = 37 * result + ( getObjectCVTerm() == null ? 0 : this.getObjectCVTerm().hashCode() );
         
         result = 37 * result + ( getType() == null ? 0 : this.getType().hashCode() );
         result = 37 * result + ( getPathDistance() == null ? 0 : this.getPathDistance().hashCode() );
         return result;
   }   

public AbstractCVTermPath generateClone() {
	AbstractCVTermPath cloned = new AbstractCVTermPath; 
    	   cloned.subjectCVTerm = this.subjectCVTerm;
    	   cloned.objectCVTerm = this.objectCVTerm;
    	   cloned.cv = this.cv;
    	   cloned.type = this.type;
    	   cloned.pathDistance = this.pathDistance;
	return cloned;
}


}


