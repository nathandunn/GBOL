package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * PhylogeneticNodeRelationship generated by hbm2java
 */
public abstract class AbstractPhylogeneticNodeRelationship extends AbstractSimpleObject implements java.io.Serializable {


     private Integer phylogeneticNodeRelationshipId;
     private PhylogeneticNode objectPhylogeneticNode;
     private PhylogeneticTree phylogeneticTree;
     private PhylogeneticNode subjectPhylogeneticNode;
     private CVTerm type;
     private Integer rank;

    public AbstractPhylogeneticNodeRelationship() {
    }

	
    public AbstractPhylogeneticNodeRelationship(PhylogeneticNode objectPhylogeneticNode, PhylogeneticTree phylogeneticTree, PhylogeneticNode subjectPhylogeneticNode, CVTerm type) {
        this.objectPhylogeneticNode = objectPhylogeneticNode;
        this.phylogeneticTree = phylogeneticTree;
        this.subjectPhylogeneticNode = subjectPhylogeneticNode;
        this.type = type;
    }
    public AbstractPhylogeneticNodeRelationship(PhylogeneticNode objectPhylogeneticNode, PhylogeneticTree phylogeneticTree, PhylogeneticNode subjectPhylogeneticNode, CVTerm type, Integer rank) {
       this.objectPhylogeneticNode = objectPhylogeneticNode;
       this.phylogeneticTree = phylogeneticTree;
       this.subjectPhylogeneticNode = subjectPhylogeneticNode;
       this.type = type;
       this.rank = rank;
    }
   
    public Integer getPhylogeneticNodeRelationshipId() {
        return this.phylogeneticNodeRelationshipId;
    }
    
    public void setPhylogeneticNodeRelationshipId(Integer phylogeneticNodeRelationshipId) {
        this.phylogeneticNodeRelationshipId = phylogeneticNodeRelationshipId;
    }
    public PhylogeneticNode getObjectPhylogeneticNode() {
        return this.objectPhylogeneticNode;
    }
    
    public void setObjectPhylogeneticNode(PhylogeneticNode objectPhylogeneticNode) {
        this.objectPhylogeneticNode = objectPhylogeneticNode;
    }
    public PhylogeneticTree getPhylogeneticTree() {
        return this.phylogeneticTree;
    }
    
    public void setPhylogeneticTree(PhylogeneticTree phylogeneticTree) {
        this.phylogeneticTree = phylogeneticTree;
    }
    public PhylogeneticNode getSubjectPhylogeneticNode() {
        return this.subjectPhylogeneticNode;
    }
    
    public void setSubjectPhylogeneticNode(PhylogeneticNode subjectPhylogeneticNode) {
        this.subjectPhylogeneticNode = subjectPhylogeneticNode;
    }
    public CVTerm getType() {
        return this.type;
    }
    
    public void setType(CVTerm type) {
        this.type = type;
    }
    public Integer getRank() {
        return this.rank;
    }
    
    public void setRank(Integer rank) {
        this.rank = rank;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractPhylogeneticNodeRelationship) ) return false;
		 AbstractPhylogeneticNodeRelationship castOther = ( AbstractPhylogeneticNodeRelationship ) other; 
         
		 return ( (this.getObjectPhylogeneticNode()==castOther.getObjectPhylogeneticNode()) || ( this.getObjectPhylogeneticNode()!=null && castOther.getObjectPhylogeneticNode()!=null && this.getObjectPhylogeneticNode().equals(castOther.getObjectPhylogeneticNode()) ) )
 && ( (this.getSubjectPhylogeneticNode()==castOther.getSubjectPhylogeneticNode()) || ( this.getSubjectPhylogeneticNode()!=null && castOther.getSubjectPhylogeneticNode()!=null && this.getSubjectPhylogeneticNode().equals(castOther.getSubjectPhylogeneticNode()) ) )
 && ( (this.getType()==castOther.getType()) || ( this.getType()!=null && castOther.getType()!=null && this.getType().equals(castOther.getType()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getObjectPhylogeneticNode() == null ? 0 : this.getObjectPhylogeneticNode().hashCode() );
         
         result = 37 * result + ( getSubjectPhylogeneticNode() == null ? 0 : this.getSubjectPhylogeneticNode().hashCode() );
         result = 37 * result + ( getType() == null ? 0 : this.getType().hashCode() );
         
         return result;
   }   

public AbstractPhylogeneticNodeRelationship generateClone() {
	AbstractPhylogeneticNodeRelationship cloned = new AbstractPhylogeneticNodeRelationship; 
    	   cloned.objectPhylogeneticNode = this.objectPhylogeneticNode;
    	   cloned.phylogeneticTree = this.phylogeneticTree;
    	   cloned.subjectPhylogeneticNode = this.subjectPhylogeneticNode;
    	   cloned.type = this.type;
    	   cloned.rank = this.rank;
	return cloned;
}


}


