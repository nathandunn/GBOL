package org.gmod.gbol.simpleObject;

/*
 * Autogenerated extension of org.gmod.gbol.simpleObject.generated.FeatureRelationshipProperty.
 * Add custom code to this file. 
 *
 * Author: Robert Bruggner, rbruggner@berkeleybop.org
 *
*/

public class FeatureRelationshipProperty extends org.gmod.gbol.simpleObject.generated.AbstractFeatureRelationshipProperty {

	private static final long serialVersionUID = 1L;

	public FeatureRelationshipProperty(){
		super();
	}


	public AbstractSimpleObjectIterator getWriteableObjects()
	{
		return new SimpleObjectIterator(this);
	}

	private static class SimpleObjectIterator extends AbstractSimpleObjectIterator
	{
		private static class Status extends AbstractSimpleObjectIterator.Status
		{
			public static final int type = 1;
			public static final int featureRelationshipPropPubs = 2;
		}
				
		public SimpleObjectIterator(FeatureRelationshipProperty featureRelationshipProp)
		{
			super(featureRelationshipProp);
		}

		public AbstractSimpleObject next()
		{
			FeatureRelationshipProperty featureRelationshipProp = (FeatureRelationshipProperty)object;
			AbstractSimpleObject retVal = null;
			if (status != Status.self) {
				retVal = soIter.next();
				if (status == Status.notSet) {
					processCollectionIterators(Status.featureRelationshipPropPubs, featureRelationshipProp.getFeatureRelationshipPropertyPublications());
				}
				if (status == Status.featureRelationshipPropPubs) {
					processSingletonIterator(Status.type, featureRelationshipProp.getType());
				}
				if (status == Status.type) {
					AbstractSimpleObject newClone = processLastSingletonIterator();
					((FeatureRelationshipProperty)clone).setType((CVTerm) newClone);
				}
			} else {
				retVal = peek();
				status = Status.done;
			}
			current = retVal;
			return retVal;
		}

	}
	
}
